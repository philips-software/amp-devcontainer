---
name: Integration Test

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      test-file:
        required: true
        type: string
      runner-labels:
        description: "Runner to use for the job, will be passed to `runs-on`"
        required: true
        type: string
      registry:
        description: "Docker registry to push built containers to, DOCKER_USERNAME and DOCKER_PASSWORD secrets must be set if not using GitHub Container Registry"
        required: false
        type: string
        default: "ghcr.io"
    secrets:
      DOCKER_REGISTRY_USERNAME:
        required: false
      DOCKER_REGISTRY_PASSWORD:
        required: false

permissions: {}

jobs:
  sanitize-image-name:
    uses: ./.github/workflows/wc-sanitize-image-name.yml
    with:
      image-name: ${{ inputs.image-name }}
      registry: ${{ inputs.registry }}
      runner-labels: ${{ inputs.runner-labels }}

  determine-container:
    runs-on: ${{ inputs.runner-labels }}
    needs: sanitize-image-name
    outputs:
      container: ${{ steps.set-container.outputs.container }}
      runner-arch: ${{ steps.runner-arch.outputs.arch }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - run: echo "arch=${RUNNER_ARCH@L}" >> "$GITHUB_OUTPUT"
        id: runner-arch
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: ${{ runner.temp }}/digests-${{ needs.sanitize-image-name.outputs.image-basename }}-${{ steps.runner-arch.outputs.arch }}
          pattern: digests-${{ needs.sanitize-image-name.outputs.image-basename }}-${{ steps.runner-arch.outputs.arch }}
      - run: echo "container=$(printf "${FULLY_QUALIFIED_IMAGE_NAME}@sha256:%s " *)" >> "$GITHUB_OUTPUT"
        working-directory: ${{ runner.temp }}/digests-${{ needs.sanitize-image-name.outputs.image-basename }}-${{ steps.runner-arch.outputs.arch }}
        env:
          FULLY_QUALIFIED_IMAGE_NAME: ${{ needs.sanitize-image-name.outputs.fully-qualified-image-name }}
          GH_REPO: ${{ github.repository }}
        id: set-container

  run-test:
    needs:
      - determine-container
      - sanitize-image-name
    runs-on: ${{ inputs.runner-labels }}
    container:
      image: ${{ needs.determine-container.outputs.container }}
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME || github.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD || github.token }}
    permissions:
      contents: read
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: test/cpp/.xwin-cache
          key: xwin-cache-${{ needs.determine-container.outputs.runner-arch }}
          restore-keys: |
            xwin-cache-${{ needs.determine-container.outputs.runner-arch }}
      - run: bats --formatter junit "${TEST_FILE}" | tee "test-report-${IMAGE_BASENAME}-${RUNNER_ARCH}.xml"
        env:
          IMAGE_BASENAME: ${{ needs.sanitize-image-name.outputs.image-basename }}
          TEST_FILE: ${{ inputs.test-file }}
          RUNNER_ARCH: ${{ needs.determine-container.outputs.runner-arch }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-results-integration-${{ needs.sanitize-image-name.outputs.image-basename }}-${{ needs.determine-container.outputs.runner-arch }}
          path: test-report-*.xml
